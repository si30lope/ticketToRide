#BlueJ class context
comment0.params=args
comment0.target=void\ main(java.lang.String[])
comment0.text=\r\n\ Main\ method\ for\ class\ Board\r\n\ \r\n\ @param\ args\ an\ array\ of\ command\ line\ arguments\ \r\n
comment1.params=g
comment1.target=void\ paint(java.awt.Graphics)
comment1.text=\r\n\ Paints\ the\ frame\r\n\ \r\n\ @param\ g\ a\ Graphics\ object\r\n
comment10.params=routeIndex
comment10.target=boolean\ canClaim(int)
comment10.text=\r\n\ Checks\ to\ see\ if\ a\ Route\ can\ be\ claimed\ by\ a\ Player,\r\n\ and\ if\ so,\ removes\ the\ appropriate\ amount\r\n\ of\ game\ pieces\ and\ colored\ train\ cards\ from\ the\ user's\ hand\r\n\ \r\n\ @param\ routeIndex\ the\ index\ of\ the\ Route\ object\ in\ the\ routes\ array\r\n\ @return\ true\ if\ a\ valid\ claim,\ false\ otherwise\r\n
comment11.params=
comment11.target=Board()
comment11.text=\r\n\ Constructor\ for\ objects\ of\ type\ Board\r\n
comment12.params=e
comment12.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment12.text=\r\n\ Invoked\ when\ a\ mouse\ button\ has\ been\ clicked\r\n\ (pressed\ and\ released)\ on\ a\ component\r\n\ (Only\ present\ to\ satisfy\ the\ MouseListener\ interface)\r\n\ \r\n\ @param\ e\ a\ MouseEvent\ object\ \r\n
comment13.params=e
comment13.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment13.text=\r\n\ Invoked\ when\ a\ mouse\ button\ has\ been\ released\ on\ a\ component\r\n\ (Only\ present\ to\ satisfy\ the\ MouseListener\ interface)\r\n\ \r\n\ @param\ e\ a\ MouseEvent\ object\ \r\n
comment14.params=e
comment14.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment14.text=\r\n\ Invoked\ when\ the\ mouse\ enters\ a\ component\r\n\ (Only\ present\ to\ satisfy\ the\ MouseListener\ interface)\r\n\ \r\n\ @param\ e\ a\ MouseEvent\ object\ \r\n
comment15.params=e
comment15.target=void\ mouseExited(java.awt.event.MouseEvent)
comment15.text=\r\nInvoked\ when\ the\ mouse\ exits\ a\ component\r\n(Only\ present\ to\ satisfy\ the\ MouseListener\ interface)\r\n\r\n@param\ e\ a\ MouseEvent\ object\ \r\n
comment2.params=
comment2.target=void\ start()
comment2.text=\r\n\ Prompts\ user\ for\ number\ of\ players,\ what\ color\ they\ want,\r\n\ and\ then\ fills\ their\ hands\ with\r\n\ train\ cards\ and\ destination\ cards,\ "flips\ up"\ the\ first\r\n\ five\ train\ cards\r\n
comment3.params=shuf
comment3.target=java.util.ArrayList\ resetCurrentTrainDeck(java.util.ArrayList)
comment3.text=\r\n\ shuffles\ a\ given\ arrayList\ of\ trainCards\r\n\ \r\n\ @return\ ArrayList\ of\ shuffled\ train\ cards\r\n
comment4.params=
comment4.target=void\ selectTrainCards()
comment4.text=\r\n\ called\ when\ player\ clicks\ select\ trainCards\ button\ during\ gameplay\r\n
comment5.params=
comment5.target=void\ selectDestinations()
comment5.text=\r\n\ this\ method\ is\ called\ if\ you\ select\ draw\ destinations\ card\ mid\ game\r\n\ \r\n
comment6.params=e
comment6.target=void\ mousePressed(java.awt.event.MouseEvent)
comment6.text=\r\n\ Invoked\ when\ the\ mouse\ button\ has\ been\ pressed\ on\ a\ component.\r\n\ Also\ acts\ as\ the\ "game\ loop,"\ managing\ player\ turns\ and\r\n\ determining\ if\ it's\ the\ last\ set\ of\ turns\r\n\ \r\n\ @param\ e\ a\ MouseEvent\ object\ \r\n
comment7.params=
comment7.target=void\ calculateFinalScore()
comment7.text=\r\n\ Calculates\ the\ final\ score\ for\ each\ player\r\n\ \r\n
comment8.params=routeIndex
comment8.target=void\ drawStock(int)
comment8.text=\r\n\ Allows\ the\ player\ to\ pick\ stock\ from\ a\ Route\r\n\ \r\n\ @param\ routeIndex\ the\ index\ (as\ an\ int)\ of\ the\ selected\ Route\ in\r\n\ \ \ \ \ \ \ \ the\ routes\ array\r\n
comment9.params=
comment9.target=void\ calculateStockScores()
comment9.text=\r\n\ Calculates\ the\ stock\ score\ for\ each\ player\r\n
numComments=16
